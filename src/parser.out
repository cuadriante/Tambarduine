Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABANICO
    BOOL
    CCODE
    COMMENT
    CUANDO
    DEF
    ELSE
    ENCASO
    ENTONS
    EQUAL
    EXEC
    EXPONENTE
    FALSE
    FINENCASO
    FOR
    FUNCTION
    GOLPE
    ID
    IF
    In
    LBRACE
    METRONOMO
    PERCUTOR
    PRINCIPAL
    SINO
    STEP
    TO
    TRUE
    VERTICAL
    VIBRATO
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> main
Rule 3     main -> line
Rule 4     line -> expression
Rule 5     line -> var_decl
Rule 6     var_decl -> SET var_assigment_list SEMICOLON
Rule 7     var_assigment_list -> VAR ASSIGN expression
Rule 8     var_assigment_list -> var_assigment_list VAR ASSIGN expression
Rule 9     expression -> arith-expression
Rule 10    expression -> condition
Rule 11    expression -> if-expression
Rule 12    expression -> for-loop
Rule 13    if-expression -> RESERVED condition expression RBRACE
Rule 14    if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE
Rule 15    for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE
Rule 16    condition -> arith-expression EQUALS arith-expression
Rule 17    condition -> arith-expression DIFFERENT arith-expression
Rule 18    condition -> arith-expression LESSTHAN arith-expression
Rule 19    condition -> arith-expression MORETHAN arith-expression
Rule 20    condition -> arith-expression LESSTHANE arith-expression
Rule 21    condition -> arith-expression MORETHANE arith-expression
Rule 22    condition -> NEGATIVE condition
Rule 23    arith-expression -> arith-expression PLUS term
Rule 24    arith-expression -> arith-expression MINUS term
Rule 25    arith-expression -> term
Rule 26    term -> term TIMES factor
Rule 27    term -> term POWER factor
Rule 28    term -> term DIVIDE factor
Rule 29    term -> term MODULE factor
Rule 30    term -> term WHOLEDIVIDE factor
Rule 31    term -> factor
Rule 32    factor -> NUMBER
Rule 33    factor -> VAR
Rule 34    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ABANICO              : 
ASSIGN               : 7 8
BOOL                 : 
CCODE                : 
COMMENT              : 
CUANDO               : 
DEF                  : 
DIFFERENT            : 17
DIVIDE               : 28
ELSE                 : 
ENCASO               : 
ENTONS               : 
EQUAL                : 
EQUALS               : 16
EXEC                 : 
EXPONENTE            : 
FALSE                : 
FINENCASO            : 
FOR                  : 
FUNCTION             : 
GOLPE                : 
ID                   : 
IF                   : 
In                   : 
LBRACE               : 
LESSTHAN             : 18
LESSTHANE            : 20
LPAREN               : 34
METRONOMO            : 
MINUS                : 24
MODULE               : 29
MORETHAN             : 19
MORETHANE            : 21
NEGATIVE             : 22
NUMBER               : 15 32
PERCUTOR             : 
PLUS                 : 23
POWER                : 27
PRINCIPAL            : 
RBRACE               : 13 14 14 15
RESERVED             : 13 14 14 15 15 15
RPAREN               : 34
SEMICOLON            : 6
SET                  : 6
SINO                 : 
STEP                 : 
TIMES                : 26
TO                   : 
TRUE                 : 
VAR                  : 7 8 15 33
VERTICAL             : 
VIBRATO              : 
WHILE                : 
WHOLEDIVIDE          : 30
error                : 

Nonterminals, with rules where they appear

arith-expression     : 9 16 16 17 17 18 18 19 19 20 20 21 21 23 24
block                : 1
condition            : 10 13 14 22
expression           : 4 7 8 13 14 14 15 34
factor               : 15 26 27 28 29 30 31
for-loop             : 12
if-expression        : 11
line                 : 3
main                 : 2
program              : 0
term                 : 23 24 25 26 27 28 29 30
var_assigment_list   : 6 8
var_decl             : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . main
    (3) main -> . line
    (4) line -> . expression
    (5) line -> . var_decl
    (9) expression -> . arith-expression
    (10) expression -> . condition
    (11) expression -> . if-expression
    (12) expression -> . for-loop
    (6) var_decl -> . SET var_assigment_list SEMICOLON
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (13) if-expression -> . RESERVED condition expression RBRACE
    (14) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (15) for-loop -> . RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    SET             shift and go to state 11
    NEGATIVE        shift and go to state 13
    RESERVED        shift and go to state 14
    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    program                        shift and go to state 1
    block                          shift and go to state 2
    main                           shift and go to state 3
    line                           shift and go to state 4
    expression                     shift and go to state 5
    var_decl                       shift and go to state 6
    arith-expression               shift and go to state 7
    condition                      shift and go to state 8
    if-expression                  shift and go to state 9
    for-loop                       shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> main .

    $end            reduce using rule 2 (block -> main .)


state 4

    (3) main -> line .

    $end            reduce using rule 3 (main -> line .)


state 5

    (4) line -> expression .

    $end            reduce using rule 4 (line -> expression .)


state 6

    (5) line -> var_decl .

    $end            reduce using rule 5 (line -> var_decl .)


state 7

    (9) expression -> arith-expression .
    (23) arith-expression -> arith-expression . PLUS term
    (24) arith-expression -> arith-expression . MINUS term
    (16) condition -> arith-expression . EQUALS arith-expression
    (17) condition -> arith-expression . DIFFERENT arith-expression
    (18) condition -> arith-expression . LESSTHAN arith-expression
    (19) condition -> arith-expression . MORETHAN arith-expression
    (20) condition -> arith-expression . LESSTHANE arith-expression
    (21) condition -> arith-expression . MORETHANE arith-expression

    $end            reduce using rule 9 (expression -> arith-expression .)
    RPAREN          reduce using rule 9 (expression -> arith-expression .)
    RBRACE          reduce using rule 9 (expression -> arith-expression .)
    SEMICOLON       reduce using rule 9 (expression -> arith-expression .)
    VAR             reduce using rule 9 (expression -> arith-expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    EQUALS          shift and go to state 21
    DIFFERENT       shift and go to state 22
    LESSTHAN        shift and go to state 23
    MORETHAN        shift and go to state 24
    LESSTHANE       shift and go to state 25
    MORETHANE       shift and go to state 26


state 8

    (10) expression -> condition .

    $end            reduce using rule 10 (expression -> condition .)
    RPAREN          reduce using rule 10 (expression -> condition .)
    RBRACE          reduce using rule 10 (expression -> condition .)
    SEMICOLON       reduce using rule 10 (expression -> condition .)
    VAR             reduce using rule 10 (expression -> condition .)


state 9

    (11) expression -> if-expression .

    $end            reduce using rule 11 (expression -> if-expression .)
    RPAREN          reduce using rule 11 (expression -> if-expression .)
    RBRACE          reduce using rule 11 (expression -> if-expression .)
    SEMICOLON       reduce using rule 11 (expression -> if-expression .)
    VAR             reduce using rule 11 (expression -> if-expression .)


state 10

    (12) expression -> for-loop .

    $end            reduce using rule 12 (expression -> for-loop .)
    RPAREN          reduce using rule 12 (expression -> for-loop .)
    RBRACE          reduce using rule 12 (expression -> for-loop .)
    SEMICOLON       reduce using rule 12 (expression -> for-loop .)
    VAR             reduce using rule 12 (expression -> for-loop .)


state 11

    (6) var_decl -> SET . var_assigment_list SEMICOLON
    (7) var_assigment_list -> . VAR ASSIGN expression
    (8) var_assigment_list -> . var_assigment_list VAR ASSIGN expression

    VAR             shift and go to state 28

    var_assigment_list             shift and go to state 27

state 12

    (25) arith-expression -> term .
    (26) term -> term . TIMES factor
    (27) term -> term . POWER factor
    (28) term -> term . DIVIDE factor
    (29) term -> term . MODULE factor
    (30) term -> term . WHOLEDIVIDE factor

    PLUS            reduce using rule 25 (arith-expression -> term .)
    MINUS           reduce using rule 25 (arith-expression -> term .)
    EQUALS          reduce using rule 25 (arith-expression -> term .)
    DIFFERENT       reduce using rule 25 (arith-expression -> term .)
    LESSTHAN        reduce using rule 25 (arith-expression -> term .)
    MORETHAN        reduce using rule 25 (arith-expression -> term .)
    LESSTHANE       reduce using rule 25 (arith-expression -> term .)
    MORETHANE       reduce using rule 25 (arith-expression -> term .)
    $end            reduce using rule 25 (arith-expression -> term .)
    RPAREN          reduce using rule 25 (arith-expression -> term .)
    NEGATIVE        reduce using rule 25 (arith-expression -> term .)
    RESERVED        reduce using rule 25 (arith-expression -> term .)
    NUMBER          reduce using rule 25 (arith-expression -> term .)
    VAR             reduce using rule 25 (arith-expression -> term .)
    LPAREN          reduce using rule 25 (arith-expression -> term .)
    RBRACE          reduce using rule 25 (arith-expression -> term .)
    SEMICOLON       reduce using rule 25 (arith-expression -> term .)
    TIMES           shift and go to state 29
    POWER           shift and go to state 30
    DIVIDE          shift and go to state 31
    MODULE          shift and go to state 32
    WHOLEDIVIDE     shift and go to state 33


state 13

    (22) condition -> NEGATIVE . condition
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NEGATIVE        shift and go to state 13
    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    condition                      shift and go to state 34
    arith-expression               shift and go to state 35
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 14

    (13) if-expression -> RESERVED . condition expression RBRACE
    (14) if-expression -> RESERVED . condition expression RBRACE RESERVED expression RBRACE
    (15) for-loop -> RESERVED . VAR RESERVED factor RESERVED NUMBER expression RBRACE
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    VAR             shift and go to state 37
    NEGATIVE        shift and go to state 13
    NUMBER          shift and go to state 17
    LPAREN          shift and go to state 18

    condition                      shift and go to state 36
    factor                         shift and go to state 16
    arith-expression               shift and go to state 35
    term                           shift and go to state 12

state 15

    (33) factor -> VAR .

    TIMES           reduce using rule 33 (factor -> VAR .)
    POWER           reduce using rule 33 (factor -> VAR .)
    DIVIDE          reduce using rule 33 (factor -> VAR .)
    MODULE          reduce using rule 33 (factor -> VAR .)
    WHOLEDIVIDE     reduce using rule 33 (factor -> VAR .)
    PLUS            reduce using rule 33 (factor -> VAR .)
    MINUS           reduce using rule 33 (factor -> VAR .)
    EQUALS          reduce using rule 33 (factor -> VAR .)
    DIFFERENT       reduce using rule 33 (factor -> VAR .)
    LESSTHAN        reduce using rule 33 (factor -> VAR .)
    MORETHAN        reduce using rule 33 (factor -> VAR .)
    LESSTHANE       reduce using rule 33 (factor -> VAR .)
    MORETHANE       reduce using rule 33 (factor -> VAR .)
    $end            reduce using rule 33 (factor -> VAR .)
    RPAREN          reduce using rule 33 (factor -> VAR .)
    NEGATIVE        reduce using rule 33 (factor -> VAR .)
    RESERVED        reduce using rule 33 (factor -> VAR .)
    NUMBER          reduce using rule 33 (factor -> VAR .)
    VAR             reduce using rule 33 (factor -> VAR .)
    LPAREN          reduce using rule 33 (factor -> VAR .)
    RBRACE          reduce using rule 33 (factor -> VAR .)
    SEMICOLON       reduce using rule 33 (factor -> VAR .)


state 16

    (31) term -> factor .

    TIMES           reduce using rule 31 (term -> factor .)
    POWER           reduce using rule 31 (term -> factor .)
    DIVIDE          reduce using rule 31 (term -> factor .)
    MODULE          reduce using rule 31 (term -> factor .)
    WHOLEDIVIDE     reduce using rule 31 (term -> factor .)
    PLUS            reduce using rule 31 (term -> factor .)
    MINUS           reduce using rule 31 (term -> factor .)
    EQUALS          reduce using rule 31 (term -> factor .)
    DIFFERENT       reduce using rule 31 (term -> factor .)
    LESSTHAN        reduce using rule 31 (term -> factor .)
    MORETHAN        reduce using rule 31 (term -> factor .)
    LESSTHANE       reduce using rule 31 (term -> factor .)
    MORETHANE       reduce using rule 31 (term -> factor .)
    $end            reduce using rule 31 (term -> factor .)
    RPAREN          reduce using rule 31 (term -> factor .)
    NEGATIVE        reduce using rule 31 (term -> factor .)
    RESERVED        reduce using rule 31 (term -> factor .)
    NUMBER          reduce using rule 31 (term -> factor .)
    VAR             reduce using rule 31 (term -> factor .)
    LPAREN          reduce using rule 31 (term -> factor .)
    RBRACE          reduce using rule 31 (term -> factor .)
    SEMICOLON       reduce using rule 31 (term -> factor .)


state 17

    (32) factor -> NUMBER .

    TIMES           reduce using rule 32 (factor -> NUMBER .)
    POWER           reduce using rule 32 (factor -> NUMBER .)
    DIVIDE          reduce using rule 32 (factor -> NUMBER .)
    MODULE          reduce using rule 32 (factor -> NUMBER .)
    WHOLEDIVIDE     reduce using rule 32 (factor -> NUMBER .)
    PLUS            reduce using rule 32 (factor -> NUMBER .)
    MINUS           reduce using rule 32 (factor -> NUMBER .)
    EQUALS          reduce using rule 32 (factor -> NUMBER .)
    DIFFERENT       reduce using rule 32 (factor -> NUMBER .)
    LESSTHAN        reduce using rule 32 (factor -> NUMBER .)
    MORETHAN        reduce using rule 32 (factor -> NUMBER .)
    LESSTHANE       reduce using rule 32 (factor -> NUMBER .)
    MORETHANE       reduce using rule 32 (factor -> NUMBER .)
    $end            reduce using rule 32 (factor -> NUMBER .)
    RPAREN          reduce using rule 32 (factor -> NUMBER .)
    NEGATIVE        reduce using rule 32 (factor -> NUMBER .)
    RESERVED        reduce using rule 32 (factor -> NUMBER .)
    NUMBER          reduce using rule 32 (factor -> NUMBER .)
    VAR             reduce using rule 32 (factor -> NUMBER .)
    LPAREN          reduce using rule 32 (factor -> NUMBER .)
    RBRACE          reduce using rule 32 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 32 (factor -> NUMBER .)


state 18

    (34) factor -> LPAREN . expression RPAREN
    (9) expression -> . arith-expression
    (10) expression -> . condition
    (11) expression -> . if-expression
    (12) expression -> . for-loop
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (13) if-expression -> . RESERVED condition expression RBRACE
    (14) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (15) for-loop -> . RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NEGATIVE        shift and go to state 13
    RESERVED        shift and go to state 14
    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    expression                     shift and go to state 38
    arith-expression               shift and go to state 7
    condition                      shift and go to state 8
    if-expression                  shift and go to state 9
    for-loop                       shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 19

    (23) arith-expression -> arith-expression PLUS . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    term                           shift and go to state 39
    factor                         shift and go to state 16

state 20

    (24) arith-expression -> arith-expression MINUS . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    term                           shift and go to state 40
    factor                         shift and go to state 16

state 21

    (16) condition -> arith-expression EQUALS . arith-expression
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    arith-expression               shift and go to state 41
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 22

    (17) condition -> arith-expression DIFFERENT . arith-expression
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    arith-expression               shift and go to state 42
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 23

    (18) condition -> arith-expression LESSTHAN . arith-expression
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    arith-expression               shift and go to state 43
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 24

    (19) condition -> arith-expression MORETHAN . arith-expression
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    arith-expression               shift and go to state 44
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 25

    (20) condition -> arith-expression LESSTHANE . arith-expression
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    arith-expression               shift and go to state 45
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 26

    (21) condition -> arith-expression MORETHANE . arith-expression
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    arith-expression               shift and go to state 46
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 27

    (6) var_decl -> SET var_assigment_list . SEMICOLON
    (8) var_assigment_list -> var_assigment_list . VAR ASSIGN expression

    SEMICOLON       shift and go to state 47
    VAR             shift and go to state 48


state 28

    (7) var_assigment_list -> VAR . ASSIGN expression

    ASSIGN          shift and go to state 49


state 29

    (26) term -> term TIMES . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    factor                         shift and go to state 50

state 30

    (27) term -> term POWER . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    factor                         shift and go to state 51

state 31

    (28) term -> term DIVIDE . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    factor                         shift and go to state 52

state 32

    (29) term -> term MODULE . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    factor                         shift and go to state 53

state 33

    (30) term -> term WHOLEDIVIDE . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    factor                         shift and go to state 54

state 34

    (22) condition -> NEGATIVE condition .

    $end            reduce using rule 22 (condition -> NEGATIVE condition .)
    NEGATIVE        reduce using rule 22 (condition -> NEGATIVE condition .)
    RESERVED        reduce using rule 22 (condition -> NEGATIVE condition .)
    NUMBER          reduce using rule 22 (condition -> NEGATIVE condition .)
    VAR             reduce using rule 22 (condition -> NEGATIVE condition .)
    LPAREN          reduce using rule 22 (condition -> NEGATIVE condition .)
    RPAREN          reduce using rule 22 (condition -> NEGATIVE condition .)
    RBRACE          reduce using rule 22 (condition -> NEGATIVE condition .)
    SEMICOLON       reduce using rule 22 (condition -> NEGATIVE condition .)


state 35

    (16) condition -> arith-expression . EQUALS arith-expression
    (17) condition -> arith-expression . DIFFERENT arith-expression
    (18) condition -> arith-expression . LESSTHAN arith-expression
    (19) condition -> arith-expression . MORETHAN arith-expression
    (20) condition -> arith-expression . LESSTHANE arith-expression
    (21) condition -> arith-expression . MORETHANE arith-expression
    (23) arith-expression -> arith-expression . PLUS term
    (24) arith-expression -> arith-expression . MINUS term

    EQUALS          shift and go to state 21
    DIFFERENT       shift and go to state 22
    LESSTHAN        shift and go to state 23
    MORETHAN        shift and go to state 24
    LESSTHANE       shift and go to state 25
    MORETHANE       shift and go to state 26
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 36

    (13) if-expression -> RESERVED condition . expression RBRACE
    (14) if-expression -> RESERVED condition . expression RBRACE RESERVED expression RBRACE
    (9) expression -> . arith-expression
    (10) expression -> . condition
    (11) expression -> . if-expression
    (12) expression -> . for-loop
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (13) if-expression -> . RESERVED condition expression RBRACE
    (14) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (15) for-loop -> . RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NEGATIVE        shift and go to state 13
    RESERVED        shift and go to state 14
    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    condition                      shift and go to state 8
    expression                     shift and go to state 55
    arith-expression               shift and go to state 7
    if-expression                  shift and go to state 9
    for-loop                       shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 37

    (15) for-loop -> RESERVED VAR . RESERVED factor RESERVED NUMBER expression RBRACE
    (33) factor -> VAR .

    RESERVED        shift and go to state 56
    TIMES           reduce using rule 33 (factor -> VAR .)
    POWER           reduce using rule 33 (factor -> VAR .)
    DIVIDE          reduce using rule 33 (factor -> VAR .)
    MODULE          reduce using rule 33 (factor -> VAR .)
    WHOLEDIVIDE     reduce using rule 33 (factor -> VAR .)
    EQUALS          reduce using rule 33 (factor -> VAR .)
    DIFFERENT       reduce using rule 33 (factor -> VAR .)
    LESSTHAN        reduce using rule 33 (factor -> VAR .)
    MORETHAN        reduce using rule 33 (factor -> VAR .)
    LESSTHANE       reduce using rule 33 (factor -> VAR .)
    MORETHANE       reduce using rule 33 (factor -> VAR .)
    PLUS            reduce using rule 33 (factor -> VAR .)
    MINUS           reduce using rule 33 (factor -> VAR .)


state 38

    (34) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 57


state 39

    (23) arith-expression -> arith-expression PLUS term .
    (26) term -> term . TIMES factor
    (27) term -> term . POWER factor
    (28) term -> term . DIVIDE factor
    (29) term -> term . MODULE factor
    (30) term -> term . WHOLEDIVIDE factor

    PLUS            reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    MINUS           reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    EQUALS          reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    DIFFERENT       reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    LESSTHAN        reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    MORETHAN        reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    LESSTHANE       reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    MORETHANE       reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    $end            reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    RPAREN          reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    NEGATIVE        reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    RESERVED        reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    NUMBER          reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    VAR             reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    LPAREN          reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    RBRACE          reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    SEMICOLON       reduce using rule 23 (arith-expression -> arith-expression PLUS term .)
    TIMES           shift and go to state 29
    POWER           shift and go to state 30
    DIVIDE          shift and go to state 31
    MODULE          shift and go to state 32
    WHOLEDIVIDE     shift and go to state 33


state 40

    (24) arith-expression -> arith-expression MINUS term .
    (26) term -> term . TIMES factor
    (27) term -> term . POWER factor
    (28) term -> term . DIVIDE factor
    (29) term -> term . MODULE factor
    (30) term -> term . WHOLEDIVIDE factor

    PLUS            reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    MINUS           reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    EQUALS          reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    DIFFERENT       reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    LESSTHAN        reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    MORETHAN        reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    LESSTHANE       reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    MORETHANE       reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    $end            reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    RPAREN          reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    NEGATIVE        reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    RESERVED        reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    NUMBER          reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    VAR             reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    LPAREN          reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    RBRACE          reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    SEMICOLON       reduce using rule 24 (arith-expression -> arith-expression MINUS term .)
    TIMES           shift and go to state 29
    POWER           shift and go to state 30
    DIVIDE          shift and go to state 31
    MODULE          shift and go to state 32
    WHOLEDIVIDE     shift and go to state 33


state 41

    (16) condition -> arith-expression EQUALS arith-expression .
    (23) arith-expression -> arith-expression . PLUS term
    (24) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    NEGATIVE        reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    RESERVED        reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    NUMBER          reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    VAR             reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    LPAREN          reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    RPAREN          reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    RBRACE          reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    SEMICOLON       reduce using rule 16 (condition -> arith-expression EQUALS arith-expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 42

    (17) condition -> arith-expression DIFFERENT arith-expression .
    (23) arith-expression -> arith-expression . PLUS term
    (24) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    NEGATIVE        reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    RESERVED        reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    NUMBER          reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    VAR             reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    LPAREN          reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    RPAREN          reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    RBRACE          reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    SEMICOLON       reduce using rule 17 (condition -> arith-expression DIFFERENT arith-expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 43

    (18) condition -> arith-expression LESSTHAN arith-expression .
    (23) arith-expression -> arith-expression . PLUS term
    (24) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    NEGATIVE        reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    RESERVED        reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    NUMBER          reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    VAR             reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    LPAREN          reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    RPAREN          reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    RBRACE          reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    SEMICOLON       reduce using rule 18 (condition -> arith-expression LESSTHAN arith-expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 44

    (19) condition -> arith-expression MORETHAN arith-expression .
    (23) arith-expression -> arith-expression . PLUS term
    (24) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    NEGATIVE        reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    RESERVED        reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    NUMBER          reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    VAR             reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    LPAREN          reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    RPAREN          reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    RBRACE          reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    SEMICOLON       reduce using rule 19 (condition -> arith-expression MORETHAN arith-expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 45

    (20) condition -> arith-expression LESSTHANE arith-expression .
    (23) arith-expression -> arith-expression . PLUS term
    (24) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    NEGATIVE        reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    RESERVED        reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    NUMBER          reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    VAR             reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    LPAREN          reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    RPAREN          reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    RBRACE          reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    SEMICOLON       reduce using rule 20 (condition -> arith-expression LESSTHANE arith-expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 46

    (21) condition -> arith-expression MORETHANE arith-expression .
    (23) arith-expression -> arith-expression . PLUS term
    (24) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    NEGATIVE        reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    RESERVED        reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    NUMBER          reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    VAR             reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    LPAREN          reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    RPAREN          reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    RBRACE          reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    SEMICOLON       reduce using rule 21 (condition -> arith-expression MORETHANE arith-expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 47

    (6) var_decl -> SET var_assigment_list SEMICOLON .

    $end            reduce using rule 6 (var_decl -> SET var_assigment_list SEMICOLON .)


state 48

    (8) var_assigment_list -> var_assigment_list VAR . ASSIGN expression

    ASSIGN          shift and go to state 58


state 49

    (7) var_assigment_list -> VAR ASSIGN . expression
    (9) expression -> . arith-expression
    (10) expression -> . condition
    (11) expression -> . if-expression
    (12) expression -> . for-loop
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (13) if-expression -> . RESERVED condition expression RBRACE
    (14) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (15) for-loop -> . RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NEGATIVE        shift and go to state 13
    RESERVED        shift and go to state 14
    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    expression                     shift and go to state 59
    arith-expression               shift and go to state 7
    condition                      shift and go to state 8
    if-expression                  shift and go to state 9
    for-loop                       shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 50

    (26) term -> term TIMES factor .

    TIMES           reduce using rule 26 (term -> term TIMES factor .)
    POWER           reduce using rule 26 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 26 (term -> term TIMES factor .)
    MODULE          reduce using rule 26 (term -> term TIMES factor .)
    WHOLEDIVIDE     reduce using rule 26 (term -> term TIMES factor .)
    PLUS            reduce using rule 26 (term -> term TIMES factor .)
    MINUS           reduce using rule 26 (term -> term TIMES factor .)
    EQUALS          reduce using rule 26 (term -> term TIMES factor .)
    DIFFERENT       reduce using rule 26 (term -> term TIMES factor .)
    LESSTHAN        reduce using rule 26 (term -> term TIMES factor .)
    MORETHAN        reduce using rule 26 (term -> term TIMES factor .)
    LESSTHANE       reduce using rule 26 (term -> term TIMES factor .)
    MORETHANE       reduce using rule 26 (term -> term TIMES factor .)
    $end            reduce using rule 26 (term -> term TIMES factor .)
    RPAREN          reduce using rule 26 (term -> term TIMES factor .)
    NEGATIVE        reduce using rule 26 (term -> term TIMES factor .)
    RESERVED        reduce using rule 26 (term -> term TIMES factor .)
    NUMBER          reduce using rule 26 (term -> term TIMES factor .)
    VAR             reduce using rule 26 (term -> term TIMES factor .)
    LPAREN          reduce using rule 26 (term -> term TIMES factor .)
    RBRACE          reduce using rule 26 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 26 (term -> term TIMES factor .)


state 51

    (27) term -> term POWER factor .

    TIMES           reduce using rule 27 (term -> term POWER factor .)
    POWER           reduce using rule 27 (term -> term POWER factor .)
    DIVIDE          reduce using rule 27 (term -> term POWER factor .)
    MODULE          reduce using rule 27 (term -> term POWER factor .)
    WHOLEDIVIDE     reduce using rule 27 (term -> term POWER factor .)
    PLUS            reduce using rule 27 (term -> term POWER factor .)
    MINUS           reduce using rule 27 (term -> term POWER factor .)
    EQUALS          reduce using rule 27 (term -> term POWER factor .)
    DIFFERENT       reduce using rule 27 (term -> term POWER factor .)
    LESSTHAN        reduce using rule 27 (term -> term POWER factor .)
    MORETHAN        reduce using rule 27 (term -> term POWER factor .)
    LESSTHANE       reduce using rule 27 (term -> term POWER factor .)
    MORETHANE       reduce using rule 27 (term -> term POWER factor .)
    $end            reduce using rule 27 (term -> term POWER factor .)
    RPAREN          reduce using rule 27 (term -> term POWER factor .)
    NEGATIVE        reduce using rule 27 (term -> term POWER factor .)
    RESERVED        reduce using rule 27 (term -> term POWER factor .)
    NUMBER          reduce using rule 27 (term -> term POWER factor .)
    VAR             reduce using rule 27 (term -> term POWER factor .)
    LPAREN          reduce using rule 27 (term -> term POWER factor .)
    RBRACE          reduce using rule 27 (term -> term POWER factor .)
    SEMICOLON       reduce using rule 27 (term -> term POWER factor .)


state 52

    (28) term -> term DIVIDE factor .

    TIMES           reduce using rule 28 (term -> term DIVIDE factor .)
    POWER           reduce using rule 28 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 28 (term -> term DIVIDE factor .)
    MODULE          reduce using rule 28 (term -> term DIVIDE factor .)
    WHOLEDIVIDE     reduce using rule 28 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 28 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 28 (term -> term DIVIDE factor .)
    EQUALS          reduce using rule 28 (term -> term DIVIDE factor .)
    DIFFERENT       reduce using rule 28 (term -> term DIVIDE factor .)
    LESSTHAN        reduce using rule 28 (term -> term DIVIDE factor .)
    MORETHAN        reduce using rule 28 (term -> term DIVIDE factor .)
    LESSTHANE       reduce using rule 28 (term -> term DIVIDE factor .)
    MORETHANE       reduce using rule 28 (term -> term DIVIDE factor .)
    $end            reduce using rule 28 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 28 (term -> term DIVIDE factor .)
    NEGATIVE        reduce using rule 28 (term -> term DIVIDE factor .)
    RESERVED        reduce using rule 28 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 28 (term -> term DIVIDE factor .)
    VAR             reduce using rule 28 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 28 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 28 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 28 (term -> term DIVIDE factor .)


state 53

    (29) term -> term MODULE factor .

    TIMES           reduce using rule 29 (term -> term MODULE factor .)
    POWER           reduce using rule 29 (term -> term MODULE factor .)
    DIVIDE          reduce using rule 29 (term -> term MODULE factor .)
    MODULE          reduce using rule 29 (term -> term MODULE factor .)
    WHOLEDIVIDE     reduce using rule 29 (term -> term MODULE factor .)
    PLUS            reduce using rule 29 (term -> term MODULE factor .)
    MINUS           reduce using rule 29 (term -> term MODULE factor .)
    EQUALS          reduce using rule 29 (term -> term MODULE factor .)
    DIFFERENT       reduce using rule 29 (term -> term MODULE factor .)
    LESSTHAN        reduce using rule 29 (term -> term MODULE factor .)
    MORETHAN        reduce using rule 29 (term -> term MODULE factor .)
    LESSTHANE       reduce using rule 29 (term -> term MODULE factor .)
    MORETHANE       reduce using rule 29 (term -> term MODULE factor .)
    $end            reduce using rule 29 (term -> term MODULE factor .)
    RPAREN          reduce using rule 29 (term -> term MODULE factor .)
    NEGATIVE        reduce using rule 29 (term -> term MODULE factor .)
    RESERVED        reduce using rule 29 (term -> term MODULE factor .)
    NUMBER          reduce using rule 29 (term -> term MODULE factor .)
    VAR             reduce using rule 29 (term -> term MODULE factor .)
    LPAREN          reduce using rule 29 (term -> term MODULE factor .)
    RBRACE          reduce using rule 29 (term -> term MODULE factor .)
    SEMICOLON       reduce using rule 29 (term -> term MODULE factor .)


state 54

    (30) term -> term WHOLEDIVIDE factor .

    TIMES           reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    POWER           reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    DIVIDE          reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    MODULE          reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    WHOLEDIVIDE     reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    PLUS            reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    MINUS           reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    EQUALS          reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    DIFFERENT       reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    LESSTHAN        reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    MORETHAN        reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    LESSTHANE       reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    MORETHANE       reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    $end            reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    RPAREN          reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    NEGATIVE        reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    RESERVED        reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    NUMBER          reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    VAR             reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    LPAREN          reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    RBRACE          reduce using rule 30 (term -> term WHOLEDIVIDE factor .)
    SEMICOLON       reduce using rule 30 (term -> term WHOLEDIVIDE factor .)


state 55

    (13) if-expression -> RESERVED condition expression . RBRACE
    (14) if-expression -> RESERVED condition expression . RBRACE RESERVED expression RBRACE

    RBRACE          shift and go to state 60


state 56

    (15) for-loop -> RESERVED VAR RESERVED . factor RESERVED NUMBER expression RBRACE
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    factor                         shift and go to state 61

state 57

    (34) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    POWER           reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    WHOLEDIVIDE     reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    MORETHAN        reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    LESSTHANE       reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    MORETHANE       reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    NEGATIVE        reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    RESERVED        reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    VAR             reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 34 (factor -> LPAREN expression RPAREN .)


state 58

    (8) var_assigment_list -> var_assigment_list VAR ASSIGN . expression
    (9) expression -> . arith-expression
    (10) expression -> . condition
    (11) expression -> . if-expression
    (12) expression -> . for-loop
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (13) if-expression -> . RESERVED condition expression RBRACE
    (14) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (15) for-loop -> . RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NEGATIVE        shift and go to state 13
    RESERVED        shift and go to state 14
    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    expression                     shift and go to state 62
    arith-expression               shift and go to state 7
    condition                      shift and go to state 8
    if-expression                  shift and go to state 9
    for-loop                       shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 59

    (7) var_assigment_list -> VAR ASSIGN expression .

    SEMICOLON       reduce using rule 7 (var_assigment_list -> VAR ASSIGN expression .)
    VAR             reduce using rule 7 (var_assigment_list -> VAR ASSIGN expression .)


state 60

    (13) if-expression -> RESERVED condition expression RBRACE .
    (14) if-expression -> RESERVED condition expression RBRACE . RESERVED expression RBRACE

    $end            reduce using rule 13 (if-expression -> RESERVED condition expression RBRACE .)
    RPAREN          reduce using rule 13 (if-expression -> RESERVED condition expression RBRACE .)
    RBRACE          reduce using rule 13 (if-expression -> RESERVED condition expression RBRACE .)
    SEMICOLON       reduce using rule 13 (if-expression -> RESERVED condition expression RBRACE .)
    VAR             reduce using rule 13 (if-expression -> RESERVED condition expression RBRACE .)
    RESERVED        shift and go to state 63


state 61

    (15) for-loop -> RESERVED VAR RESERVED factor . RESERVED NUMBER expression RBRACE

    RESERVED        shift and go to state 64


state 62

    (8) var_assigment_list -> var_assigment_list VAR ASSIGN expression .

    SEMICOLON       reduce using rule 8 (var_assigment_list -> var_assigment_list VAR ASSIGN expression .)
    VAR             reduce using rule 8 (var_assigment_list -> var_assigment_list VAR ASSIGN expression .)


state 63

    (14) if-expression -> RESERVED condition expression RBRACE RESERVED . expression RBRACE
    (9) expression -> . arith-expression
    (10) expression -> . condition
    (11) expression -> . if-expression
    (12) expression -> . for-loop
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (13) if-expression -> . RESERVED condition expression RBRACE
    (14) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (15) for-loop -> . RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NEGATIVE        shift and go to state 13
    RESERVED        shift and go to state 14
    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    condition                      shift and go to state 8
    expression                     shift and go to state 65
    arith-expression               shift and go to state 7
    if-expression                  shift and go to state 9
    for-loop                       shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 16

state 64

    (15) for-loop -> RESERVED VAR RESERVED factor RESERVED . NUMBER expression RBRACE

    NUMBER          shift and go to state 66


state 65

    (14) if-expression -> RESERVED condition expression RBRACE RESERVED expression . RBRACE

    RBRACE          shift and go to state 67


state 66

    (15) for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER . expression RBRACE
    (9) expression -> . arith-expression
    (10) expression -> . condition
    (11) expression -> . if-expression
    (12) expression -> . for-loop
    (23) arith-expression -> . arith-expression PLUS term
    (24) arith-expression -> . arith-expression MINUS term
    (25) arith-expression -> . term
    (16) condition -> . arith-expression EQUALS arith-expression
    (17) condition -> . arith-expression DIFFERENT arith-expression
    (18) condition -> . arith-expression LESSTHAN arith-expression
    (19) condition -> . arith-expression MORETHAN arith-expression
    (20) condition -> . arith-expression LESSTHANE arith-expression
    (21) condition -> . arith-expression MORETHANE arith-expression
    (22) condition -> . NEGATIVE condition
    (13) if-expression -> . RESERVED condition expression RBRACE
    (14) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (15) for-loop -> . RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE
    (26) term -> . term TIMES factor
    (27) term -> . term POWER factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term MODULE factor
    (30) term -> . term WHOLEDIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . VAR
    (34) factor -> . LPAREN expression RPAREN

    NEGATIVE        shift and go to state 13
    RESERVED        shift and go to state 14
    NUMBER          shift and go to state 17
    VAR             shift and go to state 15
    LPAREN          shift and go to state 18

    factor                         shift and go to state 16
    expression                     shift and go to state 68
    arith-expression               shift and go to state 7
    condition                      shift and go to state 8
    if-expression                  shift and go to state 9
    for-loop                       shift and go to state 10
    term                           shift and go to state 12

state 67

    (14) if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .

    $end            reduce using rule 14 (if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .)
    RPAREN          reduce using rule 14 (if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .)
    RBRACE          reduce using rule 14 (if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .)
    SEMICOLON       reduce using rule 14 (if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .)
    VAR             reduce using rule 14 (if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .)


state 68

    (15) for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER expression . RBRACE

    RBRACE          shift and go to state 69


state 69

    (15) for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE .

    $end            reduce using rule 15 (for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE .)
    RPAREN          reduce using rule 15 (for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE .)
    RBRACE          reduce using rule 15 (for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE .)
    SEMICOLON       reduce using rule 15 (for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE .)
    VAR             reduce using rule 15 (for-loop -> RESERVED VAR RESERVED factor RESERVED NUMBER expression RBRACE .)

