Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABANICO
    BOOL
    CCODE
    COMMENT
    CUANDO
    DEF
    ELSE
    ENCASO
    ENTONS
    EQUAL
    EXEC
    EXPONENTE
    FALSE
    FINENCASO
    FOR
    FUNCTION
    GOLPE
    IF
    IN
    LBRACE
    METRONOMO
    PERCUTOR
    SEMICOLON
    SET
    SINO
    TRUE
    VERTICAL
    VIBRATO
    WHILE

Grammar

Rule 0     S' -> expression
Rule 1     expression -> RESERVED VAR ASSIGN expression
Rule 2     expression -> arith-expression
Rule 3     expression -> condition
Rule 4     expression -> if-expression
Rule 5     if-expression -> RESERVED condition expression RBRACE
Rule 6     if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE
Rule 7     condition -> arith-expression EQUALS arith-expression
Rule 8     condition -> arith-expression DIFFERENT arith-expression
Rule 9     condition -> arith-expression LESSTHAN arith-expression
Rule 10    condition -> arith-expression MORETHAN arith-expression
Rule 11    condition -> arith-expression LESSTHANE arith-expression
Rule 12    condition -> arith-expression MORETHANE arith-expression
Rule 13    condition -> NEGATIVE condition
Rule 14    arith-expression -> arith-expression PLUS term
Rule 15    arith-expression -> arith-expression MINUS term
Rule 16    arith-expression -> term
Rule 17    term -> term TIMES factor
Rule 18    term -> term POWER factor
Rule 19    term -> term DIVIDE factor
Rule 20    term -> term MODULE factor
Rule 21    term -> term WHOLEDIVIDE factor
Rule 22    term -> factor
Rule 23    factor -> NUMBER
Rule 24    factor -> VAR
Rule 25    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ABANICO              : 
ASSIGN               : 1
BOOL                 : 
CCODE                : 
COMMENT              : 
CUANDO               : 
DEF                  : 
DIFFERENT            : 8
DIVIDE               : 19
ELSE                 : 
ENCASO               : 
ENTONS               : 
EQUAL                : 
EQUALS               : 7
EXEC                 : 
EXPONENTE            : 
FALSE                : 
FINENCASO            : 
FOR                  : 
FUNCTION             : 
GOLPE                : 
IF                   : 
IN                   : 
LBRACE               : 
LESSTHAN             : 9
LESSTHANE            : 11
LPAREN               : 25
METRONOMO            : 
MINUS                : 15
MODULE               : 20
MORETHAN             : 10
MORETHANE            : 12
NEGATIVE             : 13
NUMBER               : 23
PERCUTOR             : 
PLUS                 : 14
POWER                : 18
RBRACE               : 5 6 6
RESERVED             : 1 5 6 6
RPAREN               : 25
SEMICOLON            : 
SET                  : 
SINO                 : 
TIMES                : 17
TRUE                 : 
VAR                  : 1 24
VERTICAL             : 
VIBRATO              : 
WHILE                : 
WHOLEDIVIDE          : 21
error                : 

Nonterminals, with rules where they appear

arith-expression     : 2 7 7 8 8 9 9 10 10 11 11 12 12 14 15
condition            : 3 5 6 13
expression           : 1 5 6 6 25 0
factor               : 17 18 19 20 21 22
if-expression        : 4
term                 : 14 15 16 17 18 19 20 21

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . RESERVED VAR ASSIGN expression
    (2) expression -> . arith-expression
    (3) expression -> . condition
    (4) expression -> . if-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (7) condition -> . arith-expression EQUALS arith-expression
    (8) condition -> . arith-expression DIFFERENT arith-expression
    (9) condition -> . arith-expression LESSTHAN arith-expression
    (10) condition -> . arith-expression MORETHAN arith-expression
    (11) condition -> . arith-expression LESSTHANE arith-expression
    (12) condition -> . arith-expression MORETHANE arith-expression
    (13) condition -> . NEGATIVE condition
    (5) if-expression -> . RESERVED condition expression RBRACE
    (6) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    RESERVED        shift and go to state 2
    NEGATIVE        shift and go to state 8
    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    expression                     shift and go to state 1
    arith-expression               shift and go to state 4
    condition                      shift and go to state 5
    if-expression                  shift and go to state 6
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 1

    (0) S' -> expression .



state 2

    (1) expression -> RESERVED . VAR ASSIGN expression
    (5) if-expression -> RESERVED . condition expression RBRACE
    (6) if-expression -> RESERVED . condition expression RBRACE RESERVED expression RBRACE
    (7) condition -> . arith-expression EQUALS arith-expression
    (8) condition -> . arith-expression DIFFERENT arith-expression
    (9) condition -> . arith-expression LESSTHAN arith-expression
    (10) condition -> . arith-expression MORETHAN arith-expression
    (11) condition -> . arith-expression LESSTHANE arith-expression
    (12) condition -> . arith-expression MORETHANE arith-expression
    (13) condition -> . NEGATIVE condition
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    VAR             shift and go to state 12
    NEGATIVE        shift and go to state 8
    NUMBER          shift and go to state 10
    LPAREN          shift and go to state 11

    condition                      shift and go to state 13
    arith-expression               shift and go to state 14
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 3

    (24) factor -> VAR .

    TIMES           reduce using rule 24 (factor -> VAR .)
    POWER           reduce using rule 24 (factor -> VAR .)
    DIVIDE          reduce using rule 24 (factor -> VAR .)
    MODULE          reduce using rule 24 (factor -> VAR .)
    WHOLEDIVIDE     reduce using rule 24 (factor -> VAR .)
    PLUS            reduce using rule 24 (factor -> VAR .)
    MINUS           reduce using rule 24 (factor -> VAR .)
    EQUALS          reduce using rule 24 (factor -> VAR .)
    DIFFERENT       reduce using rule 24 (factor -> VAR .)
    LESSTHAN        reduce using rule 24 (factor -> VAR .)
    MORETHAN        reduce using rule 24 (factor -> VAR .)
    LESSTHANE       reduce using rule 24 (factor -> VAR .)
    MORETHANE       reduce using rule 24 (factor -> VAR .)
    $end            reduce using rule 24 (factor -> VAR .)
    RPAREN          reduce using rule 24 (factor -> VAR .)
    RBRACE          reduce using rule 24 (factor -> VAR .)
    RESERVED        reduce using rule 24 (factor -> VAR .)
    NEGATIVE        reduce using rule 24 (factor -> VAR .)
    NUMBER          reduce using rule 24 (factor -> VAR .)
    VAR             reduce using rule 24 (factor -> VAR .)
    LPAREN          reduce using rule 24 (factor -> VAR .)


state 4

    (2) expression -> arith-expression .
    (14) arith-expression -> arith-expression . PLUS term
    (15) arith-expression -> arith-expression . MINUS term
    (7) condition -> arith-expression . EQUALS arith-expression
    (8) condition -> arith-expression . DIFFERENT arith-expression
    (9) condition -> arith-expression . LESSTHAN arith-expression
    (10) condition -> arith-expression . MORETHAN arith-expression
    (11) condition -> arith-expression . LESSTHANE arith-expression
    (12) condition -> arith-expression . MORETHANE arith-expression

    $end            reduce using rule 2 (expression -> arith-expression .)
    RPAREN          reduce using rule 2 (expression -> arith-expression .)
    RBRACE          reduce using rule 2 (expression -> arith-expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    EQUALS          shift and go to state 17
    DIFFERENT       shift and go to state 18
    LESSTHAN        shift and go to state 19
    MORETHAN        shift and go to state 20
    LESSTHANE       shift and go to state 21
    MORETHANE       shift and go to state 22


state 5

    (3) expression -> condition .

    $end            reduce using rule 3 (expression -> condition .)
    RPAREN          reduce using rule 3 (expression -> condition .)
    RBRACE          reduce using rule 3 (expression -> condition .)


state 6

    (4) expression -> if-expression .

    $end            reduce using rule 4 (expression -> if-expression .)
    RPAREN          reduce using rule 4 (expression -> if-expression .)
    RBRACE          reduce using rule 4 (expression -> if-expression .)


state 7

    (16) arith-expression -> term .
    (17) term -> term . TIMES factor
    (18) term -> term . POWER factor
    (19) term -> term . DIVIDE factor
    (20) term -> term . MODULE factor
    (21) term -> term . WHOLEDIVIDE factor

    PLUS            reduce using rule 16 (arith-expression -> term .)
    MINUS           reduce using rule 16 (arith-expression -> term .)
    EQUALS          reduce using rule 16 (arith-expression -> term .)
    DIFFERENT       reduce using rule 16 (arith-expression -> term .)
    LESSTHAN        reduce using rule 16 (arith-expression -> term .)
    MORETHAN        reduce using rule 16 (arith-expression -> term .)
    LESSTHANE       reduce using rule 16 (arith-expression -> term .)
    MORETHANE       reduce using rule 16 (arith-expression -> term .)
    $end            reduce using rule 16 (arith-expression -> term .)
    RPAREN          reduce using rule 16 (arith-expression -> term .)
    RBRACE          reduce using rule 16 (arith-expression -> term .)
    RESERVED        reduce using rule 16 (arith-expression -> term .)
    NEGATIVE        reduce using rule 16 (arith-expression -> term .)
    NUMBER          reduce using rule 16 (arith-expression -> term .)
    VAR             reduce using rule 16 (arith-expression -> term .)
    LPAREN          reduce using rule 16 (arith-expression -> term .)
    TIMES           shift and go to state 23
    POWER           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULE          shift and go to state 26
    WHOLEDIVIDE     shift and go to state 27


state 8

    (13) condition -> NEGATIVE . condition
    (7) condition -> . arith-expression EQUALS arith-expression
    (8) condition -> . arith-expression DIFFERENT arith-expression
    (9) condition -> . arith-expression LESSTHAN arith-expression
    (10) condition -> . arith-expression MORETHAN arith-expression
    (11) condition -> . arith-expression LESSTHANE arith-expression
    (12) condition -> . arith-expression MORETHANE arith-expression
    (13) condition -> . NEGATIVE condition
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NEGATIVE        shift and go to state 8
    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    condition                      shift and go to state 28
    arith-expression               shift and go to state 14
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 9

    (22) term -> factor .

    TIMES           reduce using rule 22 (term -> factor .)
    POWER           reduce using rule 22 (term -> factor .)
    DIVIDE          reduce using rule 22 (term -> factor .)
    MODULE          reduce using rule 22 (term -> factor .)
    WHOLEDIVIDE     reduce using rule 22 (term -> factor .)
    PLUS            reduce using rule 22 (term -> factor .)
    MINUS           reduce using rule 22 (term -> factor .)
    EQUALS          reduce using rule 22 (term -> factor .)
    DIFFERENT       reduce using rule 22 (term -> factor .)
    LESSTHAN        reduce using rule 22 (term -> factor .)
    MORETHAN        reduce using rule 22 (term -> factor .)
    LESSTHANE       reduce using rule 22 (term -> factor .)
    MORETHANE       reduce using rule 22 (term -> factor .)
    $end            reduce using rule 22 (term -> factor .)
    RPAREN          reduce using rule 22 (term -> factor .)
    RBRACE          reduce using rule 22 (term -> factor .)
    RESERVED        reduce using rule 22 (term -> factor .)
    NEGATIVE        reduce using rule 22 (term -> factor .)
    NUMBER          reduce using rule 22 (term -> factor .)
    VAR             reduce using rule 22 (term -> factor .)
    LPAREN          reduce using rule 22 (term -> factor .)


state 10

    (23) factor -> NUMBER .

    TIMES           reduce using rule 23 (factor -> NUMBER .)
    POWER           reduce using rule 23 (factor -> NUMBER .)
    DIVIDE          reduce using rule 23 (factor -> NUMBER .)
    MODULE          reduce using rule 23 (factor -> NUMBER .)
    WHOLEDIVIDE     reduce using rule 23 (factor -> NUMBER .)
    PLUS            reduce using rule 23 (factor -> NUMBER .)
    MINUS           reduce using rule 23 (factor -> NUMBER .)
    EQUALS          reduce using rule 23 (factor -> NUMBER .)
    DIFFERENT       reduce using rule 23 (factor -> NUMBER .)
    LESSTHAN        reduce using rule 23 (factor -> NUMBER .)
    MORETHAN        reduce using rule 23 (factor -> NUMBER .)
    LESSTHANE       reduce using rule 23 (factor -> NUMBER .)
    MORETHANE       reduce using rule 23 (factor -> NUMBER .)
    $end            reduce using rule 23 (factor -> NUMBER .)
    RPAREN          reduce using rule 23 (factor -> NUMBER .)
    RBRACE          reduce using rule 23 (factor -> NUMBER .)
    RESERVED        reduce using rule 23 (factor -> NUMBER .)
    NEGATIVE        reduce using rule 23 (factor -> NUMBER .)
    NUMBER          reduce using rule 23 (factor -> NUMBER .)
    VAR             reduce using rule 23 (factor -> NUMBER .)
    LPAREN          reduce using rule 23 (factor -> NUMBER .)


state 11

    (25) factor -> LPAREN . expression RPAREN
    (1) expression -> . RESERVED VAR ASSIGN expression
    (2) expression -> . arith-expression
    (3) expression -> . condition
    (4) expression -> . if-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (7) condition -> . arith-expression EQUALS arith-expression
    (8) condition -> . arith-expression DIFFERENT arith-expression
    (9) condition -> . arith-expression LESSTHAN arith-expression
    (10) condition -> . arith-expression MORETHAN arith-expression
    (11) condition -> . arith-expression LESSTHANE arith-expression
    (12) condition -> . arith-expression MORETHANE arith-expression
    (13) condition -> . NEGATIVE condition
    (5) if-expression -> . RESERVED condition expression RBRACE
    (6) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    RESERVED        shift and go to state 2
    NEGATIVE        shift and go to state 8
    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    expression                     shift and go to state 29
    arith-expression               shift and go to state 4
    condition                      shift and go to state 5
    if-expression                  shift and go to state 6
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 12

    (1) expression -> RESERVED VAR . ASSIGN expression
    (24) factor -> VAR .

    ASSIGN          shift and go to state 30
    TIMES           reduce using rule 24 (factor -> VAR .)
    POWER           reduce using rule 24 (factor -> VAR .)
    DIVIDE          reduce using rule 24 (factor -> VAR .)
    MODULE          reduce using rule 24 (factor -> VAR .)
    WHOLEDIVIDE     reduce using rule 24 (factor -> VAR .)
    EQUALS          reduce using rule 24 (factor -> VAR .)
    DIFFERENT       reduce using rule 24 (factor -> VAR .)
    LESSTHAN        reduce using rule 24 (factor -> VAR .)
    MORETHAN        reduce using rule 24 (factor -> VAR .)
    LESSTHANE       reduce using rule 24 (factor -> VAR .)
    MORETHANE       reduce using rule 24 (factor -> VAR .)
    PLUS            reduce using rule 24 (factor -> VAR .)
    MINUS           reduce using rule 24 (factor -> VAR .)


state 13

    (5) if-expression -> RESERVED condition . expression RBRACE
    (6) if-expression -> RESERVED condition . expression RBRACE RESERVED expression RBRACE
    (1) expression -> . RESERVED VAR ASSIGN expression
    (2) expression -> . arith-expression
    (3) expression -> . condition
    (4) expression -> . if-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (7) condition -> . arith-expression EQUALS arith-expression
    (8) condition -> . arith-expression DIFFERENT arith-expression
    (9) condition -> . arith-expression LESSTHAN arith-expression
    (10) condition -> . arith-expression MORETHAN arith-expression
    (11) condition -> . arith-expression LESSTHANE arith-expression
    (12) condition -> . arith-expression MORETHANE arith-expression
    (13) condition -> . NEGATIVE condition
    (5) if-expression -> . RESERVED condition expression RBRACE
    (6) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    RESERVED        shift and go to state 2
    NEGATIVE        shift and go to state 8
    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    condition                      shift and go to state 5
    expression                     shift and go to state 31
    arith-expression               shift and go to state 4
    if-expression                  shift and go to state 6
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 14

    (7) condition -> arith-expression . EQUALS arith-expression
    (8) condition -> arith-expression . DIFFERENT arith-expression
    (9) condition -> arith-expression . LESSTHAN arith-expression
    (10) condition -> arith-expression . MORETHAN arith-expression
    (11) condition -> arith-expression . LESSTHANE arith-expression
    (12) condition -> arith-expression . MORETHANE arith-expression
    (14) arith-expression -> arith-expression . PLUS term
    (15) arith-expression -> arith-expression . MINUS term

    EQUALS          shift and go to state 17
    DIFFERENT       shift and go to state 18
    LESSTHAN        shift and go to state 19
    MORETHAN        shift and go to state 20
    LESSTHANE       shift and go to state 21
    MORETHANE       shift and go to state 22
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 15

    (14) arith-expression -> arith-expression PLUS . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    term                           shift and go to state 32
    factor                         shift and go to state 9

state 16

    (15) arith-expression -> arith-expression MINUS . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    term                           shift and go to state 33
    factor                         shift and go to state 9

state 17

    (7) condition -> arith-expression EQUALS . arith-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    arith-expression               shift and go to state 34
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 18

    (8) condition -> arith-expression DIFFERENT . arith-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    arith-expression               shift and go to state 35
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 19

    (9) condition -> arith-expression LESSTHAN . arith-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    arith-expression               shift and go to state 36
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 20

    (10) condition -> arith-expression MORETHAN . arith-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    arith-expression               shift and go to state 37
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 21

    (11) condition -> arith-expression LESSTHANE . arith-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    arith-expression               shift and go to state 38
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 22

    (12) condition -> arith-expression MORETHANE . arith-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    arith-expression               shift and go to state 39
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 23

    (17) term -> term TIMES . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    factor                         shift and go to state 40

state 24

    (18) term -> term POWER . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    factor                         shift and go to state 41

state 25

    (19) term -> term DIVIDE . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    factor                         shift and go to state 42

state 26

    (20) term -> term MODULE . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    factor                         shift and go to state 43

state 27

    (21) term -> term WHOLEDIVIDE . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    factor                         shift and go to state 44

state 28

    (13) condition -> NEGATIVE condition .

    $end            reduce using rule 13 (condition -> NEGATIVE condition .)
    RESERVED        reduce using rule 13 (condition -> NEGATIVE condition .)
    NEGATIVE        reduce using rule 13 (condition -> NEGATIVE condition .)
    NUMBER          reduce using rule 13 (condition -> NEGATIVE condition .)
    VAR             reduce using rule 13 (condition -> NEGATIVE condition .)
    LPAREN          reduce using rule 13 (condition -> NEGATIVE condition .)
    RPAREN          reduce using rule 13 (condition -> NEGATIVE condition .)
    RBRACE          reduce using rule 13 (condition -> NEGATIVE condition .)


state 29

    (25) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 45


state 30

    (1) expression -> RESERVED VAR ASSIGN . expression
    (1) expression -> . RESERVED VAR ASSIGN expression
    (2) expression -> . arith-expression
    (3) expression -> . condition
    (4) expression -> . if-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (7) condition -> . arith-expression EQUALS arith-expression
    (8) condition -> . arith-expression DIFFERENT arith-expression
    (9) condition -> . arith-expression LESSTHAN arith-expression
    (10) condition -> . arith-expression MORETHAN arith-expression
    (11) condition -> . arith-expression LESSTHANE arith-expression
    (12) condition -> . arith-expression MORETHANE arith-expression
    (13) condition -> . NEGATIVE condition
    (5) if-expression -> . RESERVED condition expression RBRACE
    (6) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    RESERVED        shift and go to state 2
    NEGATIVE        shift and go to state 8
    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    expression                     shift and go to state 46
    arith-expression               shift and go to state 4
    condition                      shift and go to state 5
    if-expression                  shift and go to state 6
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 31

    (5) if-expression -> RESERVED condition expression . RBRACE
    (6) if-expression -> RESERVED condition expression . RBRACE RESERVED expression RBRACE

    RBRACE          shift and go to state 47


state 32

    (14) arith-expression -> arith-expression PLUS term .
    (17) term -> term . TIMES factor
    (18) term -> term . POWER factor
    (19) term -> term . DIVIDE factor
    (20) term -> term . MODULE factor
    (21) term -> term . WHOLEDIVIDE factor

    PLUS            reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    MINUS           reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    EQUALS          reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    DIFFERENT       reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    LESSTHAN        reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    MORETHAN        reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    LESSTHANE       reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    MORETHANE       reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    $end            reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    RPAREN          reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    RBRACE          reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    RESERVED        reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    NEGATIVE        reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    NUMBER          reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    VAR             reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    LPAREN          reduce using rule 14 (arith-expression -> arith-expression PLUS term .)
    TIMES           shift and go to state 23
    POWER           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULE          shift and go to state 26
    WHOLEDIVIDE     shift and go to state 27


state 33

    (15) arith-expression -> arith-expression MINUS term .
    (17) term -> term . TIMES factor
    (18) term -> term . POWER factor
    (19) term -> term . DIVIDE factor
    (20) term -> term . MODULE factor
    (21) term -> term . WHOLEDIVIDE factor

    PLUS            reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    MINUS           reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    EQUALS          reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    DIFFERENT       reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    LESSTHAN        reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    MORETHAN        reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    LESSTHANE       reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    MORETHANE       reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    $end            reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    RPAREN          reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    RBRACE          reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    RESERVED        reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    NEGATIVE        reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    NUMBER          reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    VAR             reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    LPAREN          reduce using rule 15 (arith-expression -> arith-expression MINUS term .)
    TIMES           shift and go to state 23
    POWER           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULE          shift and go to state 26
    WHOLEDIVIDE     shift and go to state 27


state 34

    (7) condition -> arith-expression EQUALS arith-expression .
    (14) arith-expression -> arith-expression . PLUS term
    (15) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 7 (condition -> arith-expression EQUALS arith-expression .)
    RESERVED        reduce using rule 7 (condition -> arith-expression EQUALS arith-expression .)
    NEGATIVE        reduce using rule 7 (condition -> arith-expression EQUALS arith-expression .)
    NUMBER          reduce using rule 7 (condition -> arith-expression EQUALS arith-expression .)
    VAR             reduce using rule 7 (condition -> arith-expression EQUALS arith-expression .)
    LPAREN          reduce using rule 7 (condition -> arith-expression EQUALS arith-expression .)
    RPAREN          reduce using rule 7 (condition -> arith-expression EQUALS arith-expression .)
    RBRACE          reduce using rule 7 (condition -> arith-expression EQUALS arith-expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 35

    (8) condition -> arith-expression DIFFERENT arith-expression .
    (14) arith-expression -> arith-expression . PLUS term
    (15) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 8 (condition -> arith-expression DIFFERENT arith-expression .)
    RESERVED        reduce using rule 8 (condition -> arith-expression DIFFERENT arith-expression .)
    NEGATIVE        reduce using rule 8 (condition -> arith-expression DIFFERENT arith-expression .)
    NUMBER          reduce using rule 8 (condition -> arith-expression DIFFERENT arith-expression .)
    VAR             reduce using rule 8 (condition -> arith-expression DIFFERENT arith-expression .)
    LPAREN          reduce using rule 8 (condition -> arith-expression DIFFERENT arith-expression .)
    RPAREN          reduce using rule 8 (condition -> arith-expression DIFFERENT arith-expression .)
    RBRACE          reduce using rule 8 (condition -> arith-expression DIFFERENT arith-expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 36

    (9) condition -> arith-expression LESSTHAN arith-expression .
    (14) arith-expression -> arith-expression . PLUS term
    (15) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 9 (condition -> arith-expression LESSTHAN arith-expression .)
    RESERVED        reduce using rule 9 (condition -> arith-expression LESSTHAN arith-expression .)
    NEGATIVE        reduce using rule 9 (condition -> arith-expression LESSTHAN arith-expression .)
    NUMBER          reduce using rule 9 (condition -> arith-expression LESSTHAN arith-expression .)
    VAR             reduce using rule 9 (condition -> arith-expression LESSTHAN arith-expression .)
    LPAREN          reduce using rule 9 (condition -> arith-expression LESSTHAN arith-expression .)
    RPAREN          reduce using rule 9 (condition -> arith-expression LESSTHAN arith-expression .)
    RBRACE          reduce using rule 9 (condition -> arith-expression LESSTHAN arith-expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 37

    (10) condition -> arith-expression MORETHAN arith-expression .
    (14) arith-expression -> arith-expression . PLUS term
    (15) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 10 (condition -> arith-expression MORETHAN arith-expression .)
    RESERVED        reduce using rule 10 (condition -> arith-expression MORETHAN arith-expression .)
    NEGATIVE        reduce using rule 10 (condition -> arith-expression MORETHAN arith-expression .)
    NUMBER          reduce using rule 10 (condition -> arith-expression MORETHAN arith-expression .)
    VAR             reduce using rule 10 (condition -> arith-expression MORETHAN arith-expression .)
    LPAREN          reduce using rule 10 (condition -> arith-expression MORETHAN arith-expression .)
    RPAREN          reduce using rule 10 (condition -> arith-expression MORETHAN arith-expression .)
    RBRACE          reduce using rule 10 (condition -> arith-expression MORETHAN arith-expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 38

    (11) condition -> arith-expression LESSTHANE arith-expression .
    (14) arith-expression -> arith-expression . PLUS term
    (15) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 11 (condition -> arith-expression LESSTHANE arith-expression .)
    RESERVED        reduce using rule 11 (condition -> arith-expression LESSTHANE arith-expression .)
    NEGATIVE        reduce using rule 11 (condition -> arith-expression LESSTHANE arith-expression .)
    NUMBER          reduce using rule 11 (condition -> arith-expression LESSTHANE arith-expression .)
    VAR             reduce using rule 11 (condition -> arith-expression LESSTHANE arith-expression .)
    LPAREN          reduce using rule 11 (condition -> arith-expression LESSTHANE arith-expression .)
    RPAREN          reduce using rule 11 (condition -> arith-expression LESSTHANE arith-expression .)
    RBRACE          reduce using rule 11 (condition -> arith-expression LESSTHANE arith-expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 39

    (12) condition -> arith-expression MORETHANE arith-expression .
    (14) arith-expression -> arith-expression . PLUS term
    (15) arith-expression -> arith-expression . MINUS term

    $end            reduce using rule 12 (condition -> arith-expression MORETHANE arith-expression .)
    RESERVED        reduce using rule 12 (condition -> arith-expression MORETHANE arith-expression .)
    NEGATIVE        reduce using rule 12 (condition -> arith-expression MORETHANE arith-expression .)
    NUMBER          reduce using rule 12 (condition -> arith-expression MORETHANE arith-expression .)
    VAR             reduce using rule 12 (condition -> arith-expression MORETHANE arith-expression .)
    LPAREN          reduce using rule 12 (condition -> arith-expression MORETHANE arith-expression .)
    RPAREN          reduce using rule 12 (condition -> arith-expression MORETHANE arith-expression .)
    RBRACE          reduce using rule 12 (condition -> arith-expression MORETHANE arith-expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 40

    (17) term -> term TIMES factor .

    TIMES           reduce using rule 17 (term -> term TIMES factor .)
    POWER           reduce using rule 17 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 17 (term -> term TIMES factor .)
    MODULE          reduce using rule 17 (term -> term TIMES factor .)
    WHOLEDIVIDE     reduce using rule 17 (term -> term TIMES factor .)
    PLUS            reduce using rule 17 (term -> term TIMES factor .)
    MINUS           reduce using rule 17 (term -> term TIMES factor .)
    EQUALS          reduce using rule 17 (term -> term TIMES factor .)
    DIFFERENT       reduce using rule 17 (term -> term TIMES factor .)
    LESSTHAN        reduce using rule 17 (term -> term TIMES factor .)
    MORETHAN        reduce using rule 17 (term -> term TIMES factor .)
    LESSTHANE       reduce using rule 17 (term -> term TIMES factor .)
    MORETHANE       reduce using rule 17 (term -> term TIMES factor .)
    $end            reduce using rule 17 (term -> term TIMES factor .)
    RPAREN          reduce using rule 17 (term -> term TIMES factor .)
    RBRACE          reduce using rule 17 (term -> term TIMES factor .)
    RESERVED        reduce using rule 17 (term -> term TIMES factor .)
    NEGATIVE        reduce using rule 17 (term -> term TIMES factor .)
    NUMBER          reduce using rule 17 (term -> term TIMES factor .)
    VAR             reduce using rule 17 (term -> term TIMES factor .)
    LPAREN          reduce using rule 17 (term -> term TIMES factor .)


state 41

    (18) term -> term POWER factor .

    TIMES           reduce using rule 18 (term -> term POWER factor .)
    POWER           reduce using rule 18 (term -> term POWER factor .)
    DIVIDE          reduce using rule 18 (term -> term POWER factor .)
    MODULE          reduce using rule 18 (term -> term POWER factor .)
    WHOLEDIVIDE     reduce using rule 18 (term -> term POWER factor .)
    PLUS            reduce using rule 18 (term -> term POWER factor .)
    MINUS           reduce using rule 18 (term -> term POWER factor .)
    EQUALS          reduce using rule 18 (term -> term POWER factor .)
    DIFFERENT       reduce using rule 18 (term -> term POWER factor .)
    LESSTHAN        reduce using rule 18 (term -> term POWER factor .)
    MORETHAN        reduce using rule 18 (term -> term POWER factor .)
    LESSTHANE       reduce using rule 18 (term -> term POWER factor .)
    MORETHANE       reduce using rule 18 (term -> term POWER factor .)
    $end            reduce using rule 18 (term -> term POWER factor .)
    RPAREN          reduce using rule 18 (term -> term POWER factor .)
    RBRACE          reduce using rule 18 (term -> term POWER factor .)
    RESERVED        reduce using rule 18 (term -> term POWER factor .)
    NEGATIVE        reduce using rule 18 (term -> term POWER factor .)
    NUMBER          reduce using rule 18 (term -> term POWER factor .)
    VAR             reduce using rule 18 (term -> term POWER factor .)
    LPAREN          reduce using rule 18 (term -> term POWER factor .)


state 42

    (19) term -> term DIVIDE factor .

    TIMES           reduce using rule 19 (term -> term DIVIDE factor .)
    POWER           reduce using rule 19 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 19 (term -> term DIVIDE factor .)
    MODULE          reduce using rule 19 (term -> term DIVIDE factor .)
    WHOLEDIVIDE     reduce using rule 19 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 19 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 19 (term -> term DIVIDE factor .)
    EQUALS          reduce using rule 19 (term -> term DIVIDE factor .)
    DIFFERENT       reduce using rule 19 (term -> term DIVIDE factor .)
    LESSTHAN        reduce using rule 19 (term -> term DIVIDE factor .)
    MORETHAN        reduce using rule 19 (term -> term DIVIDE factor .)
    LESSTHANE       reduce using rule 19 (term -> term DIVIDE factor .)
    MORETHANE       reduce using rule 19 (term -> term DIVIDE factor .)
    $end            reduce using rule 19 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 19 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 19 (term -> term DIVIDE factor .)
    RESERVED        reduce using rule 19 (term -> term DIVIDE factor .)
    NEGATIVE        reduce using rule 19 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 19 (term -> term DIVIDE factor .)
    VAR             reduce using rule 19 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 19 (term -> term DIVIDE factor .)


state 43

    (20) term -> term MODULE factor .

    TIMES           reduce using rule 20 (term -> term MODULE factor .)
    POWER           reduce using rule 20 (term -> term MODULE factor .)
    DIVIDE          reduce using rule 20 (term -> term MODULE factor .)
    MODULE          reduce using rule 20 (term -> term MODULE factor .)
    WHOLEDIVIDE     reduce using rule 20 (term -> term MODULE factor .)
    PLUS            reduce using rule 20 (term -> term MODULE factor .)
    MINUS           reduce using rule 20 (term -> term MODULE factor .)
    EQUALS          reduce using rule 20 (term -> term MODULE factor .)
    DIFFERENT       reduce using rule 20 (term -> term MODULE factor .)
    LESSTHAN        reduce using rule 20 (term -> term MODULE factor .)
    MORETHAN        reduce using rule 20 (term -> term MODULE factor .)
    LESSTHANE       reduce using rule 20 (term -> term MODULE factor .)
    MORETHANE       reduce using rule 20 (term -> term MODULE factor .)
    $end            reduce using rule 20 (term -> term MODULE factor .)
    RPAREN          reduce using rule 20 (term -> term MODULE factor .)
    RBRACE          reduce using rule 20 (term -> term MODULE factor .)
    RESERVED        reduce using rule 20 (term -> term MODULE factor .)
    NEGATIVE        reduce using rule 20 (term -> term MODULE factor .)
    NUMBER          reduce using rule 20 (term -> term MODULE factor .)
    VAR             reduce using rule 20 (term -> term MODULE factor .)
    LPAREN          reduce using rule 20 (term -> term MODULE factor .)


state 44

    (21) term -> term WHOLEDIVIDE factor .

    TIMES           reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    POWER           reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    DIVIDE          reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    MODULE          reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    WHOLEDIVIDE     reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    PLUS            reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    MINUS           reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    EQUALS          reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    DIFFERENT       reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    LESSTHAN        reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    MORETHAN        reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    LESSTHANE       reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    MORETHANE       reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    $end            reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    RPAREN          reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    RBRACE          reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    RESERVED        reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    NEGATIVE        reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    NUMBER          reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    VAR             reduce using rule 21 (term -> term WHOLEDIVIDE factor .)
    LPAREN          reduce using rule 21 (term -> term WHOLEDIVIDE factor .)


state 45

    (25) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    POWER           reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    WHOLEDIVIDE     reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    MORETHAN        reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    LESSTHANE       reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    MORETHANE       reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    RESERVED        reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    NEGATIVE        reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    VAR             reduce using rule 25 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 25 (factor -> LPAREN expression RPAREN .)


state 46

    (1) expression -> RESERVED VAR ASSIGN expression .

    $end            reduce using rule 1 (expression -> RESERVED VAR ASSIGN expression .)
    RPAREN          reduce using rule 1 (expression -> RESERVED VAR ASSIGN expression .)
    RBRACE          reduce using rule 1 (expression -> RESERVED VAR ASSIGN expression .)


state 47

    (5) if-expression -> RESERVED condition expression RBRACE .
    (6) if-expression -> RESERVED condition expression RBRACE . RESERVED expression RBRACE

    $end            reduce using rule 5 (if-expression -> RESERVED condition expression RBRACE .)
    RPAREN          reduce using rule 5 (if-expression -> RESERVED condition expression RBRACE .)
    RBRACE          reduce using rule 5 (if-expression -> RESERVED condition expression RBRACE .)
    RESERVED        shift and go to state 48


state 48

    (6) if-expression -> RESERVED condition expression RBRACE RESERVED . expression RBRACE
    (1) expression -> . RESERVED VAR ASSIGN expression
    (2) expression -> . arith-expression
    (3) expression -> . condition
    (4) expression -> . if-expression
    (14) arith-expression -> . arith-expression PLUS term
    (15) arith-expression -> . arith-expression MINUS term
    (16) arith-expression -> . term
    (7) condition -> . arith-expression EQUALS arith-expression
    (8) condition -> . arith-expression DIFFERENT arith-expression
    (9) condition -> . arith-expression LESSTHAN arith-expression
    (10) condition -> . arith-expression MORETHAN arith-expression
    (11) condition -> . arith-expression LESSTHANE arith-expression
    (12) condition -> . arith-expression MORETHANE arith-expression
    (13) condition -> . NEGATIVE condition
    (5) if-expression -> . RESERVED condition expression RBRACE
    (6) if-expression -> . RESERVED condition expression RBRACE RESERVED expression RBRACE
    (17) term -> . term TIMES factor
    (18) term -> . term POWER factor
    (19) term -> . term DIVIDE factor
    (20) term -> . term MODULE factor
    (21) term -> . term WHOLEDIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . VAR
    (25) factor -> . LPAREN expression RPAREN

    RESERVED        shift and go to state 2
    NEGATIVE        shift and go to state 8
    NUMBER          shift and go to state 10
    VAR             shift and go to state 3
    LPAREN          shift and go to state 11

    condition                      shift and go to state 5
    expression                     shift and go to state 49
    arith-expression               shift and go to state 4
    if-expression                  shift and go to state 6
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 49

    (6) if-expression -> RESERVED condition expression RBRACE RESERVED expression . RBRACE

    RBRACE          shift and go to state 50


state 50

    (6) if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .

    $end            reduce using rule 6 (if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .)
    RPAREN          reduce using rule 6 (if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .)
    RBRACE          reduce using rule 6 (if-expression -> RESERVED condition expression RBRACE RESERVED expression RBRACE .)

